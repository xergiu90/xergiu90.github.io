{"version":3,"sources":["./src/app/core/services/state.service.ts","./src/app/core/services/routing.service.ts","./src/environments/environment.ts","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.component.html","./src/app/shared/modules/material.module.ts","./src/app/shared/shared.module.ts","./src/app/core/models/user.model.ts","./src/app/core/services/modal.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/guards/authentication.guard.service.ts","./src/app/app.module.ts","./src/app/shared/components/main-nav/main-nav.component.html","./src/app/shared/components/main-nav/main-nav.component.ts","./src/app/core/services/http.service.ts","./src/app/core/services/index.ts","./src/app/app.constants.ts","./src/app/core/services/movie.service.ts","./src/app/core/services/user.service.ts","./src/app/core/core.module.ts","./src/app/shared/components/movie-details/movie-details.component.ts","./src/app/shared/components/movie-details/movie-details.component.html","./src/app/app-routing.module.ts","./src/app/core/services/authentication.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\r\nimport { User } from '@core/models/user.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateService {\r\n  private currentUser: BehaviorSubject<User> = new BehaviorSubject(null);\r\n  private apiKey: BehaviorSubject<string> = new BehaviorSubject(null);\r\n  private isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  authEvent: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  authEmit(action: string) {\r\n    this.authEvent.emit(action);\r\n  }\r\n\r\n  getAuthEventEmitter(): EventEmitter<string> {\r\n    return this.authEvent;\r\n  }\r\n\r\n  public setApiKey(res) {\r\n    this.apiKey.next(res);\r\n  }\r\n\r\n  public getApiKey(): Observable<string> {\r\n    return this.apiKey.asObservable();\r\n  }\r\n\r\n  public setCurrentUser(res) {\r\n    this.currentUser.next(new User(res));\r\n  }\r\n\r\n  public getLoggedInStatus(): Observable<boolean> {\r\n    return this.isLoggedIn.asObservable();\r\n  }\r\n\r\n\r\n  public getLoggedInStatusSubject(): BehaviorSubject<boolean> {\r\n    return this.isLoggedIn;\r\n  }\r\n\r\n  public setLoggedInStatus(state: boolean) {\r\n    this.isLoggedIn.next(state);\r\n  }\r\n\r\n  public getCurrentUser(): Observable<User> {\r\n    return this.currentUser.asObservable().pipe(\r\n      filter(res => res !== null)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\ninterface Link {\r\n  url(args?: string[]): string;\r\n}\r\n\r\n/*\r\n * Defines the internal links that one can navigate to.\r\n * Usage:\r\n * this.RoutingService.HOME.url();\r\n * this.RoutingService.PASSWORD_RESET.url(['someToken']);\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RoutingService {\r\n  readonly HOME: Link = {url: () => `/home`};\r\n  readonly FAVORITES: Link = {url: () => `/favorites`};\r\n\r\n  _errorHandlingOverwriteRoutes = [];\r\n\r\n  get errorHandlingOverwriteRoutes() {\r\n    return this._errorHandlingOverwriteRoutes;\r\n  }\r\n\r\n  addErrorHandlingOverwriteRoutes(route: string) {\r\n    if (!this.errorHandlingOverwriteRoutes.includes(route)) {\r\n      this.errorHandlingOverwriteRoutes.push(route);\r\n    }\r\n  }\r\n\r\n  removeErrorHandlingOverwriteRoutes(route) {\r\n    if (this.errorHandlingOverwriteRoutes.includes(route)) {\r\n      this.errorHandlingOverwriteRoutes.splice(this.errorHandlingOverwriteRoutes.indexOf(route), 1);\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'https://api.themoviedb.org'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectorRef, Component, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { RoutingService } from '@core/services';\r\nimport { AuthenticationService } from '@core/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: 'login.component.html',\r\n})\r\nexport class LoginComponent {\r\n  loginForm = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required]),\r\n  });\r\n  isInvalidCredentials = false;\r\n\r\n  getErrorMessage() {\r\n    if (this.loginForm.controls['email'].hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n\r\n    if (this.loginForm.controls['password'].hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n\r\n    if (this.isInvalidCredentials) {\r\n      return 'Invalid credentials';\r\n    }\r\n\r\n    return this.loginForm.controls['email'].hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<LoginComponent>,\r\n    private cdr: ChangeDetectorRef,\r\n    private authService: AuthenticationService,\r\n    private routingService: RoutingService,\r\n    private router: Router) {}\r\n\r\n  onLogin() {\r\n    if(this.authService.login(this.loginForm.controls['email'].value, this.loginForm.controls['password'].value)) {\r\n      this.isInvalidCredentials = false;\r\n      this.dialogRef.close();\r\n      this.router.navigate([this.routingService.HOME.url()]);\r\n      this.cdr.detectChanges();\r\n    } else {\r\n      this.isInvalidCredentials = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Login</h1>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"loginForm\" (submit)=\"onLogin()\">\r\n    <mat-form-field fxFill=\"100%\">\r\n      <mat-label>Username</mat-label>\r\n      <input matInput placeholder=\"test@example.com\" formControlName=\"email\" autocomplete=\"off\" required>\r\n      <mat-error *ngIf=\"loginForm.get('email').invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field fxFill=\"100%\">\r\n      <mat-label>Password</mat-label>\r\n      <input matInput formControlName=\"password\" [type]=\"'password'\">\r\n      <mat-error *ngIf=\"loginForm.get('password').invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"isInvalidCredentials\">{{getErrorMessage()}}</mat-error>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" class=\"login-button\"  type=\"submit\" (click)=\"onLogin()\">Login</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { LoginComponent } from '@shared/components/login/login.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule\r\n  ],\r\n  declarations: [\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { LoginComponent } from '@shared/components/login/login.component';\r\nimport { MainNavComponent } from '@shared/components/main-nav/main-nav.component';\r\nimport { MovieDetailsComponent } from '@shared/components/movie-details/movie-details.component';\r\nimport { MaterialModule } from '@shared/modules/material.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    FlexModule,\r\n    CoreModule,\r\n    FontAwesomeModule\r\n  ],\r\n  declarations: [\r\n    MainNavComponent,\r\n    LoginComponent,\r\n    MovieDetailsComponent\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    MainNavComponent,\r\n    FontAwesomeModule,\r\n    FlexModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class SharedModule {\r\n}\r\n","import { IUser } from '@core/interfaces/user.interface';\r\n\r\nexport class User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n\r\n  constructor(userData: IUser) {\r\n    this.id = userData.id;\r\n    this.username = userData.username;\r\n    this.email = userData.email;\r\n  }\r\n\r\n  public toDTO(): object {\r\n    return {\r\n      uuid: this.id,\r\n      username: this.username,\r\n      email: this.email,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '@shared/components/login/login.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ModalService {\r\n\r\n  constructor(\r\n    private dialog: MatDialog\r\n  ) {\r\n  }\r\n\r\n  public openLoginModal() {\r\n    this.dialog.open(LoginComponent, {\r\n      width: '350px',\r\n      height: '320px',\r\n      disableClose: true\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'movie-filter';\n}\n","<main-nav></main-nav>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\r\nimport { ModalService } from '@core/services/modal.service';\r\nimport { AuthenticationService, StateService } from '../services';\r\n\r\n@Injectable()\r\nexport class AuthenticationGuardService implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private auth: AuthenticationService,\r\n    private modalService: ModalService,\r\n    private stateService: StateService,\r\n  ) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\r\n    return new Promise<boolean>((resolve, reject) => {\r\n      if (this.checkIfUserIsAuthenticated()) {\r\n        resolve(true);\r\n      } else {\r\n        resolve(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  private checkIfUserIsAuthenticated(): boolean {\r\n    if (!this.stateService.getLoggedInStatusSubject().getValue()) {\r\n      this.modalService.openLoginModal();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SharedModule } from '@shared/shared.module';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    HttpClientModule,\n    ToastrModule.forRoot(\n      {\n        positionClass: 'toast-top-center',\n        timeOut: 2000,\n        preventDuplicates: true,\n        maxOpened: 1,\n        autoDismiss: true,\n        enableHtml: true},\n    ),\n    FontAwesomeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"main-menu\" fxLayoutAlign=\"space-between center\">\r\n  <div>\r\n    <a mat-button color=\"primary\" [routerLink]=\"routingService.HOME.url()\"  [routerLinkActive]=\"['item-selected']\">\r\n      Home\r\n    </a>\r\n    <a mat-button color=\"primary\" [routerLink]=\"routingService.FAVORITES.url()\" [routerLinkActive]=\"['item-selected']\">\r\n      Favorites\r\n    </a>\r\n  </div>\r\n  <mat-form-field fxFlex=\"30%\">\r\n    <mat-label>Enter API Key</mat-label>\r\n    <input matInput [(ngModel)]=\"apiKey\" (input)=\"setAPIKey($event)\">\r\n  </mat-form-field>\r\n  <button mat-raised-button color=\"warn\" *ngIf=\"loggedIn\" (click)=\"onLogout()\">Logout</button>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '@core/models/user.model';\r\nimport { AuthenticationService, RoutingService, StateService } from '@core/services';\r\nimport { ModalService } from '@core/services/modal.service';\r\n\r\n\r\n@Component({\r\n  selector: 'main-nav',\r\n  templateUrl: './main-nav.component.html',\r\n  styleUrls: ['./main-nav.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MainNavComponent implements OnInit {\r\n  currentUser: User;\r\n  loggedIn: boolean;\r\n  apiKey: string;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private authService: AuthenticationService,\r\n    public router: Router,\r\n    public stateService: StateService,\r\n    public routingService: RoutingService,\r\n    private modalService: ModalService\r\n  ) {\r\n\r\n    stateService.getLoggedInStatus().subscribe(\r\n      logged => {\r\n        this.loggedIn = logged;\r\n      }\r\n    );\r\n\r\n    stateService.getCurrentUser().subscribe(user => {\r\n      this.currentUser = user;\r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n    this.apiKey = JSON.parse(localStorage.getItem('APIkey'));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.stateService.setApiKey(this.apiKey);\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n    this.modalService.openLoginModal();\r\n  }\r\n\r\n  setAPIKey (event) {\r\n    localStorage.setItem('APIkey', JSON.stringify(event.target.value));\r\n    this.stateService.setApiKey(event.target.value);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@environments/environment';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n  apiUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.apiUrl = environment.api;\r\n  }\r\n  private setHeaders(): HttpHeaders {\r\n    const headersConfig = {\r\n      'Content-Type': 'application/X-www-form-urlencoded',\r\n    };\r\n\r\n    return new HttpHeaders(headersConfig);\r\n  }\r\n\r\n  private formatErrors(error: any) {\r\n    return throwError(error);\r\n  }\r\n\r\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}${path}`, {\r\n      params,\r\n      headers: this.setHeaders()\r\n    })\r\n      .pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  put(path: string, body: object): Observable<any> {\r\n    return this.http.put(\r\n      `${this.apiUrl}${path}`,\r\n      body,\r\n      {headers: this.setHeaders()}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  patch(path: string, body: object): Observable<any> {\r\n    return this.http.patch(\r\n      `${this.apiUrl}${path}`,\r\n      body,\r\n      {headers: this.setHeaders()}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  post(path: string, body: object): Observable<any> {\r\n    return this.http.post(\r\n      `${this.apiUrl}${path}`,\r\n      body,\r\n      {headers: this.setHeaders()}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  delete(path: string): Observable<any> {\r\n    return this.http.delete(\r\n      `${this.apiUrl}${path}`,\r\n      {headers: this.setHeaders()}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n}\r\n","export * from './authentication.service';\r\nexport * from './http.service';\r\nexport * from './routing.service';\r\nexport * from './state.service';\r\nexport * from './user.service';\r\nexport * from './movie.service';\r\n\r\n","import { IUser } from './core/interfaces/user.interface';\r\n\r\nexport const users: IUser[] = [\r\n  {\r\n    id: 1,\r\n    username: 'user1',\r\n    email: 'user1@email.com',\r\n    password: 'user1'\r\n  },\r\n  {\r\n    id: 2,\r\n    username: 'user2',\r\n    email: 'user2@email.com',\r\n    password: 'user2'\r\n  },\r\n  {\r\n    id: 3,\r\n    username: 'user3',\r\n    email: 'user3@email.com',\r\n    password: 'user3'\r\n  }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@core/services/http.service';\r\nimport { StateService } from '@core/services/state.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieService {\r\n  apiKey;\r\n\r\n  constructor(\r\n    private stateService: StateService,\r\n    private httpService: HttpService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.stateService.getApiKey().subscribe(apiKey => {\r\n      this.apiKey = apiKey;\r\n    });\r\n  }\r\n\r\n  search(term: string): Observable<any> {\r\n    if (this.apiKey) {\r\n      let searchQuery = `/3/search/movie?api_key=${this.apiKey}&language=en-US&page=1&include_adult=false&query=${term}`;\r\n      return this.httpService.get(searchQuery);\r\n    } else {\r\n      this.toastr.error('Please add API key!');\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  getGenres(): Observable<{ genres: { id: number, name: string }[] }> {\r\n    if (this.apiKey) {\r\n      let searchQuery = `/3/genre/movie/list?api_key=${this.apiKey}&language=en-US`;\r\n      return this.httpService.get(searchQuery) as Observable<{ genres: { id: number, name: string }[] }>;\r\n    } else {\r\n      this.toastr.error('Please add API key!');\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '@core/models/user.model';\r\nimport { StateService } from './state.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private stateService: StateService\r\n  ) {\r\n  }\r\n\r\n\r\n  setUserData(res: User) {\r\n    localStorage.setItem('currentUser', JSON.stringify(res));\r\n    this.stateService.setCurrentUser(res);\r\n  }\r\n\r\n  public getUser(): User {\r\n    return JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { AuthenticationService, HttpService } from '@core/services';\nimport { AuthenticationGuardService } from './guards/authentication.guard.service';\n\n@NgModule({\n  imports: [],\n  exports: [],\n  declarations: [],\n  providers: [\n    HttpService,\n    AuthenticationGuardService,\n    AuthenticationService,\n  ]\n})\nexport class CoreModule {\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { IMovie } from '@core/interfaces/movie.interface';\r\n\r\n@Component({\r\n  selector: 'movie-details',\r\n  templateUrl: './movie-details.component.html',\r\n  styleUrls: ['./movie-details.component.scss'],\r\n})\r\nexport class MovieDetailsComponent implements OnInit, OnDestroy {\r\n  form: FormGroup;\r\n  @Input() movie: IMovie;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<MovieDetailsComponent>,\r\n  ) {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"modal-container\">\r\n  <span class=\"close-button\">\r\n    <button\r\n      (click)=\"close()\">x\r\n    </button>\r\n  </span>\r\n  <span class=\"modal-title\" mat-dialog-title>Poster for {{ movie.name }}</span>\r\n  <mat-dialog-content>\r\n    <ng-container *ngIf=\"movie.posterURL\">\r\n      <div fxLayout=\"column\">\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"margin-top-10\">\r\n          <div fxFlex=\"100\" class=\"form-field\" fxLayoutAlign=\"center center\">\r\n            <div class=\"photo-container\"\r\n                 *ngIf=\"movie.posterURL\"\r\n                 [ngStyle]=\"{ 'width': '300px'}\">\r\n              <img class=\"photo-tag\"\r\n                   *ngIf=\"movie.posterURL\"\r\n                   [ngStyle]=\" { 'width': '300px' }\"\r\n                   src=\"{{movie.posterURL}}\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </ng-container>\r\n  </mat-dialog-content>\r\n  <div fxLayoutAlign=\"center center\" mat-dialog-actions>\r\n    <button\r\n      mat-raised-button color=\"primary\"\r\n      (click)=\"close()\">\r\n      Close\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuardService } from './core/guards/authentication.guard.service';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    // pathMatch: 'full',\n    loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule),\n    canActivate: [\n      AuthenticationGuardService\n    ],\n  },\n  {\n    path: 'favorites',\n    // pathMatch: 'full',\n    loadChildren: () => import('./pages/favorites/favourites.module').then(m => m.FavouritesModule),\n    canActivate: [\n      AuthenticationGuardService\n    ],\n  },\n  { path: '',\n    redirectTo: '/home',\n    pathMatch: 'full' },\n  {\n    path: '**',\n    // pathMatch: 'full',\n    loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule),\n    canActivate: [\n      AuthenticationGuardService\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LoginComponent } from '@shared/components/login/login.component';\r\nimport { users } from '../../app.constants';\r\nimport { RoutingService } from './routing.service';\r\nimport { StateService } from './state.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  users = users;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private stateService: StateService,\r\n    private routingService: RoutingService,\r\n  ) {\r\n    if (localStorage.getItem('loggedIn')) {\r\n      this.stateService.setLoggedInStatus(true);\r\n      this.stateService.setCurrentUser(JSON.parse(localStorage.getItem('currentUser')));\r\n    }\r\n  }\r\n\r\n  login(email, password) {\r\n    let isValid = false;\r\n    users.forEach(\r\n      user => {\r\n        if(user.email === email && user.password === password){\r\n          localStorage.setItem('loggedIn', 'true');\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n          this.stateService.setLoggedInStatus(true);\r\n          this.stateService.setCurrentUser(user);\r\n          isValid = true;\r\n        }\r\n      }\r\n    );\r\n\r\n    return isValid;\r\n  }\r\n\r\n  logout() {\r\n    this.router.navigate([this.routingService.HOME.url()]);\r\n    localStorage.removeItem('loggedIn');\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('APIkey');\r\n    this.stateService.setLoggedInStatus(false);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}