{"version":3,"sources":["./src/app/pages/favorites/favourites.module.ts","./src/app/pages/favorites/favourites.component.ts","./src/app/pages/favorites/favourites.component.html","./src/app/pages/favorites/favourites.routes.ts"],"names":[],"mappings":"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","file":"pages-favorites-favourites-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FavouritesComponent } from './favourites.component';\nimport { FavouritesRoutes } from './favourites.routes';\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(FavouritesRoutes),\n  ],\n  declarations: [\n    FavouritesComponent\n  ],\n  exports: [\n  ]\n})\nexport class FavouritesModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { IGenre } from '@core/interfaces/genre.interface';\r\nimport { IMovie } from '@core/interfaces/movie.interface';\r\nimport { IUser } from '@core/interfaces/user.interface';\r\nimport { MovieService, StateService, UserService } from '@core/services';\r\nimport { MovieDetailsComponent } from '@shared/components/movie-details/movie-details.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-favourites',\r\n  templateUrl: './favourites.component.html',\r\n  styleUrls: ['./favourites.component.scss'],\r\n})\r\nexport class FavouritesComponent implements OnDestroy {\r\n  currentUser: IUser;\r\n  userSubscription: Subscription;\r\n  favourites: IMovie[] = [];\r\n  genreName: any = [];\r\n  faHeart = faHeart;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private usersService: UserService,\r\n    private cdr: ChangeDetectorRef,\r\n    private stateService: StateService,\r\n    private movieService: MovieService,\r\n  ) {\r\n    this.userSubscription = this.stateService.getCurrentUser().subscribe(user => {\r\n      if (user && user.id) {\r\n        this.currentUser = user;\r\n      }\r\n    });\r\n    this.readFavourites();\r\n    this.fetchGenres();\r\n\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  readFavourites() {\r\n    const storedMoviesString = JSON.parse(localStorage.getItem('favourites'));\r\n    if (storedMoviesString) {\r\n      const storedMoviesObject = storedMoviesString[this.currentUser.id];\r\n      if (storedMoviesObject) {\r\n        this.favourites = storedMoviesObject;\r\n        this.cdr.markForCheck();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleFavourites(movie: IMovie) {\r\n    movie.isFavourite =  !movie.isFavourite;\r\n    this.favourites = this.favourites.filter(mov => {\r\n      return mov.isFavourite;\r\n    })\r\n\r\n    const favMoviesPerUser = JSON.parse(localStorage.getItem('favourites'));\r\n    favMoviesPerUser[this.currentUser.id] = this.favourites;\r\n\r\n    localStorage.setItem('favourites', JSON.stringify(favMoviesPerUser));\r\n  }\r\n\r\n  fetchGenres() {\r\n    this.movieService.getGenres().subscribe(res => {\r\n        if (res) {\r\n          this.genreName = res.genres.reduce((map: any, genre: IGenre) => {\r\n            map[genre.id as any] = genre.name;\r\n            return map;\r\n          }, {});\r\n        }\r\n      },\r\n      err => {\r\n      });\r\n  }\r\n\r\n\r\n  showMovieDetails(movie: IMovie) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.hasBackdrop = true;\r\n    dialogConfig.closeOnNavigation = true;\r\n    const dialogRef = this.dialog.open(MovieDetailsComponent, dialogConfig);\r\n    dialogRef.componentInstance.movie = movie;\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"favourites-page\" fxFlex=\"100\" fxLayout=\"row wrap\">\r\n  <h2 fxFlex=\"100\">Favourite Movies</h2>\r\n\r\n  <div class=\"users-container\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxFlex=\"100\">\r\n    <ng-container *ngFor=\"let movie of favourites\">\r\n      <mat-card class=\"movie\" fxFlex=\"1 1 24\" fxFlex.lt-lg=\"0 1 48\" fxFlex.lt-sm=\"0 1 95\" fxLayout=\"column wrap\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\r\n        <div class=\"favourites\" fxLayoutAlign=\"center center\">\r\n          <i class=\"fas fa-heart\"></i>\r\n          <fa-icon [icon]=\"faHeart\" [ngClass]=\"{ 'is-favorite' : movie.isFavourite }\" (click)=\"toggleFavourites(movie)\"></fa-icon>\r\n        </div>\r\n        <div class=\"photo-container\"\r\n             *ngIf=\"movie.posterURL\"\r\n             [ngStyle]=\"{'width': '200px', 'height': '305px'}\">\r\n          <img class=\"photo-tag\"\r\n               *ngIf=\"movie.posterURL\"\r\n               [ngStyle]=\" {'width': '200px', 'height': '305px' }\"\r\n               src=\"{{movie.posterURL}}\"/>\r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n          <div class=\"user-info\" fxFlex=\"calc(100%-60px)\" fxLayout=\"row wrap\" fxLayoutAlign=\"start start\">\r\n            <div class=\"pointer\" fxFlex=\"100\" (click)=\"showMovieDetails(movie)\">\r\n              <span class=\"movie-title\">{{movie.name}}</span>\r\n            </div>\r\n            <div fxFlex=\"100\">Year: <span class=\"bold\">{{movie.year}}</span></div>\r\n          </div>\r\n          <div fxFlex=\"calc(60px)\" class=\"rating-wrapper\" fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n            <div fxFlex=\"100\">Rating:</div>\r\n            <div class=\"rating\" fxFlex=\"100\">\r\n              <span>{{ movie.rating }}</span>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"100\" fxLayoutAlign=\"start start\">\r\n            <div fxFlex=\"100\" *ngIf=\"movie.genre.length\">Genre: <span class=\"genre-token\"\r\n                                                                      *ngFor=\"let genre of movie.genre\">{{genreName[genre]}} </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n","import { Routes } from '@angular/router';\r\nimport { FavouritesComponent } from './favourites.component';\r\n\r\nexport const FavouritesRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: FavouritesComponent,\r\n  }\r\n];\r\n"],"sourceRoot":"webpack:///"}